// .cfg v2.0.0.0
// SpaceY Lifters (SYL)
// created: 17 Nov 2014
// updated: 09 May 2023

// This file: CC BY-NC-SA 4.0 by zer0Kerbal
PART
{
name = syl-SRBconeSize1slanted
oldName = SYSRBconeSize1slanted
module = Part
author = NecroBones and zer0Kerbal

MODEL {
	model = SpaceY/SpaceYLifters/Assets/SYSRBconeSize1slanted
	scale = 1.0, 1.0, 1.0
}
scale = 1.0
rescaleFactor = 1.0

node_stack_bottom = 0.0, -0.5, 0.0, 0.0, -1.0, 0.0, 1


	fx_exhaustFlame_yellow_tiny = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, running
	sound_vent_medium = engage
	sound_rocket_mini = running
	sound_vent_soft = disengage

	TechRequired = advConstruction
	entryCost = 6000
	cost = 600
	category = Aero
	subcategory = 0
	title = SpaceY SNC1S Slanted Sepratron Nose Cone (1.25m)
	manufacturer = #SYC-Agency-titl
	description = To facilitate rapid scheduled disassembly of launch vehicles, this nose cone packs a punch, in addition to being aerodynamic and quite stylish too. At least our engineers think so.

	tags = #SYC-srb-tags separat stag detach

attachRules = 1,0,1,1,0

mass = 0.04
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 9
maxTemp = 2200
bulkheadProfiles = size1
fuelCrossFeed = True

stageOffset = 1
childStageOffset = 1
stagingIcon = SOLID_BOOSTER

	thermalMassModifier = 6.0
	emissiveConstant = 0.95

	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		throttleLocked = True
		exhaustDamage = False
		allowShutdown = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 40
		heatProduction = 100
		fxOffset = 0, 0, 0
		PROPELLANT
		{
			name = SolidFuel
       	 		ratio = 1.0
			DrawGauge = True
		}
		atmosphereCurve
 		{
   			key = 0 180
  			key = 1 120
			key = 5 50
			key = 8 0.1
 		}
		exhaustDamageMultiplier = 200
	}

	RESOURCE
	{
		name = SolidFuel
		amount = 16
		maxAmount = 16
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}
