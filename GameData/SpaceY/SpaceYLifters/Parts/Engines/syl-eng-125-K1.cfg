// syl-eng-125-K1.cfg v2.0.0.0
// SpaceY Lifters (SYL)
// created: 17 Nov 2014
// updated: 09 May 2023

// THIS FILE: CC BY-NC-SA 4.0 by NecroBones and zer0Kerbal
PART
{
	name = syl-eng-125-K1
	oldName = SYengine1mK1
	module = Part
	author = NecroBones and zer0Kerbal

	MODEL { model = SpaceY/SpaceYLifters/Assets/SYengine1mK1 }
	scale = 1.0
	rescaleFactor = 1.0
	bulkheadProfiles = size1, srf

	attachRules = 1,1,1,0,1
	node_stack_top = 0.0, 0.8, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1
	node_attach = 0.0, 0.8, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_disabled = 0.0, -1000.0, 0.0, 0.0, -1.0, 0.0, 0

	TechRequired = heavyRocketry
	entryCost = 12000
	cost = 3950
	category = Engine
	subcategory = 0

	title = SpaceY K1 "Kiwi" Engine
	manufacturer = #SYC-Agency-titl
	description = Meant to be a giant leap forward in small-sized boosters, the K1 "Kiwi" is similar to the LV-T45, but with twice the punch, due to advances in turbopump design. It comes at a cost, however, since it is more expensive and less efficient. Now contains "attach anywhere" technology.
	tags = #SYL-eng-kiwi

	mass = 1.65

	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2

	crashTolerance = 7
	breakingForce = 150 // 5000
	breakingTorque = 150 // 5000

	maxTemp = 2200
	heatConductivity = 0.06 // half default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.8 // engine nozzles are good at radiating.

	EFFECTS
	{
		running_closed
		{
			AUDIO
			{
				channel = Ship
				clip = sound_rocket_hard
				volume = 0.0 0.0
				volume = 1.0 1.0
				pitch = 0.0 0.2
				pitch = 1.0 1.0
				loop = true
			}
			PREFAB_PARTICLE
			{
				prefabName = fx_smokeTrail_veryLarge
				transformName = smokeTransform
				emission = 0.0 0.0
				emission = 0.05 0.0
				emission = 0.075 0.15
				emission = 1.0 0.8
				speed = 0.0 0.25
				speed = 1.0 1.0
				localOffset = 0, 0, 1
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = SpaceY/SpaceYLifters/FX/SYemitterK1
				transformName = fxTransform
				emission = 0.0 0.0
				emission = 0.05 0.0
				emission = 0.075 0.25
				emission = 1.0 1.0
				speed = 0.0 0.5
				speed = 1.0 1.0
			}
		}
		engage
		{
			AUDIO
			{
				channel = Ship
				clip = sound_vent_soft
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = fxTransform
				oneShot = true
			}
			AUDIO
			{
				channel = Ship
				clip = sound_explosion_low
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
	}

	MODULE
	{
		name = ModuleEnginesFX
		thrustVectorTransformName = thrustTransform
		runningEffectName = running_closed
		engineID = SYK1
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 440
		heatProduction = 200
		//fxOffset = 0, 0, 0.25
		engineAccelerationSpeed = 0.6
    		engineDecelerationSpeed = 0.9
		EngineType = LiquidFuel
		PROPELLANT
		{
			name = LiquidFuel
			ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
		}
		atmosphereCurve
 		{
			key = 0 298
			key = 1 260
			key = 12 0.001
 		}
	}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.8
		maxDistance = 50
		falloff = 1.8
		thrustTransformName = thrustTransform
	}

	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = gimbalTransform
		gimbalRange = 4
	}

	//MODULE
	//{
	//      name = ModuleAnimateHeat
	//      ThermalAnim = SYengine1mD1
	//}
	MODULE
	{
		name = FXModuleAnimateThrottle
		animationName = SYengine1mD1
		responseSpeed = 0.001
		dependOnEngineState = True
		dependOnThrottle = True
	}

	MODULE
	{
		name = ModuleAlternator	
		RESOURCE
		{
			name = ElectricCharge
			rate = 12.0
		}
	}

	MODULE
	{
		name = ModuleJettison
		jettisonName = engineShroud
		bottomNodeName = bottom
		isFairing = True
		jettisonedObjectMass = 0.1
		jettisonForce = 15
		jettisonDirection = 0 0 1
		
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 60
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}

}