// IndicatorLights.cfg v2.1.0.0
// SpaceY Lifters (SYL)
// created: 17 Nov 2014
// updated: 09 May 2023

// THIS FILE: CC BY-NC-SA 4.0 by NecroBones and zer0Kerbal
@PART[SYsasR*]:HAS[@MODULE[ModuleAnimateGeneric]]:NEEDS[IndicatorLights]:FOR[SpaceYLifters]
{
	@description ^= :[^\.]+activate with SAS.:: 

	!MODULE[ModuleAnimateGeneric] { }

	MODULE {
		name = ModuleControllableEmissive
		target = SYsasR5m
		emissiveName = lightSAS
	}
	MODULE {
		name = ModuleReactionWheelIndicator
		emissiveName = lightSAS
	}
}

@PART[SYprobe*]:NEEDS[IndicatorLights]:FOR[SpaceYLifters]
{
	%emissiveName = #$name$LightBattery
	MODULE {
		name = ModuleControllableEmissive
		target = lightBattery
		emissiveName = #$../emissiveName$
	}
	MODULE {
		name = ModuleResourceLevelIndicator
	}
	MODULE {
		name = ModuleResourceEnabledIndicator
		enabledColor = ModuleResourceLevelIndicator
		disabledColor = blink(ModuleResourceLevelIndicator, 900, $Off, 300)
		emissiveName = #$../emissiveName$
	}

	MODULE {
		name = ModuleControllableEmissive
		target = lightSAS
		emissiveName = lightSAS
	}
	MODULE {
		name = ModuleReactionWheelIndicator
		emissiveName = lightSAS
	}
}
@PART[SYprobe*]:NEEDS[IndicatorLights]:AFTER[SpaceYLifters]
{
	!emissiveName = delete
}



// Indicator lights for SpaceY docking ports.
@PART[SYdocking3m|SYdocking5m|SYdocking7m]:NEEDS[IndicatorLights]:FOR[SpaceYLifters] {
    @description ^= :(.)$:$0 Indicator lights display crossfeed status.:
    
    //-------------------------------------------------------------------------
    // CONTROLLABLE EMISSIVES
    //-------------------------------------------------------------------------
    MODULE {
        name = ModuleControllableEmissive
        target = SYdockingGuideGreen
        emissiveName = sideIndicator
    }
    
    MODULE {
        name = ModuleControllableEmissive
        target = SYdockingGuideBottom
        emissiveName = topIndicator
    }
    
    MODULE {
        name = ModuleControllableEmissive
        target = SYdockingGuideTop
        emissiveName = bottomIndicator
    }
    
    //-------------------------------------------------------------------------
    // CONTROLLERS
    //-------------------------------------------------------------------------
    
    // The top indicator is always red. It's continuous-on, except for blinking
    // while engaging / disengaging.
    MODULE {
        name = ModuleDockingStateIndicator
        emissiveName = topIndicator
        readyColor = #FF0000
        acquireColor = blink(#FF0000, 100, $Off, 100)
        disengageColor = blink(#FF0000, 120, $Off, 1080)
    }
    
    // The bottom indicator is the same deal, but yellow.
    MODULE {
        name = ModuleDockingStateIndicator
        emissiveName = bottomIndicator
        readyColor = #FFFF00
        acquireColor = blink(#FFFF00, 100, $Off, 100)
        disengageColor = blink(#FFFF00, 120, $Off, 1080)
    }
    
    // Detects docking crossfeed state, used to drive the
    // side indicators.
    MODULE {
        name = ModuleDockingCrossfeedIndicator
    }

    // We feed the crossfeed-state color into a user-controllable
    // on/off toggle (on by default).
    MODULE {
        name = ModuleToggleLED
        activeColor = ModuleDockingCrossfeedIndicator
        inactiveColor = $Off
        status = true
    }
    
    // Output of the toggle then goes into the side indicators as the
    // "ready" color. When the docking port is engaging/disengaging,
    // they blink regardless of whether the toggle is on or off.
    MODULE {
        name = ModuleDockingStateIndicator
        emissiveName = sideIndicator
        readyColor = ModuleToggleLED
        acquireColor = blink(ModuleDockingCrossfeedIndicator, 100, $Off, 100)
        disengageColor = blink(ModuleDockingCrossfeedIndicator, 120, $Off, 1080)
    }
}

// If *both* IndicatorLights and DefaultActionGroups are installed, then
// the toggleable side lights are off by default, and are added to the Light
// action group.
@PART[SYdocking3m|SYdocking5m|SYdocking7m]:NEEDS[IndicatorLights&DefaultActionGroups]:FOR[SpaceYLifters] {

    @MODULE[ModuleToggleLED] {
        @status = false
    }
    
    MODULE {
        name = ModuleDefaultActionGroup
        moduleSource = ModuleToggleLED
        actionGuiName = Toggle Light
        defaultActionGroup = Light
    }
}

